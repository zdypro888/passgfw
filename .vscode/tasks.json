{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build macOS Client Library",
            "type": "shell",
            "command": "cd ${workspaceFolder}/client/scripts && ./build_macos.sh",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": ["$gcc"],
            "detail": "Build PassGFW client library for macOS (universal binary)"
        },
        {
            "label": "Compile macOS Example",
            "type": "shell",
            "command": "cd ${workspaceFolder}/client/build-macos && clang -g -O0 ../examples/example_macos.c -o example_macos -I./include -L./lib -lpassgfw_client -framework Foundation -framework Security -lc++",
            "group": "build",
            "dependsOn": ["Build macOS Client Library"],
            "problemMatcher": ["$gcc"],
            "detail": "Compile macOS example (depends on library build)"
        },
        {
            "label": "Compile C Example",
            "type": "shell",
            "command": "cd ${workspaceFolder}/client/build-macos && clang -g -O0 ../examples/example_c.c -o example_c -I./include -L./lib -lpassgfw_client -framework Foundation -framework Security -lc++",
            "group": "build",
            "dependsOn": ["Build macOS Client Library"],
            "problemMatcher": ["$gcc"],
            "detail": "Compile C example (depends on library build)"
        },
        {
            "label": "Start Go Server",
            "type": "shell",
            "command": "cd ${workspaceFolder}/server && go run main.go",
            "isBackground": true,
            "problemMatcher": {
                "pattern": {
                    "regexp": "^(.*)$",
                    "file": 1
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": ".*PassGFW Server Starting.*",
                    "endsPattern": ".*Server listening.*"
                }
            },
            "detail": "Start Go server in background"
        },
        {
            "label": "Clean Build",
            "type": "shell",
            "command": "${workspaceFolder}/client/scripts/CLEAN.sh",
            "problemMatcher": [],
            "detail": "Clean all build artifacts"
        }
    ]
}

